include "./toInclude_BitBlasting_ok.lus"

const maxValue = [0,0,0,1,0,0,0,0];


--**************** Const Rates ****************--

const a1_e1_rate_in = [1,0,0,0,0,0,0,0];
const a1_e3_rate_in = [1,0,0,0,0,0,0,0];
const a1_e5in_rate_in = [1,0,0,0,0,0,0,0];
const a1_e5out_rate_out = [1,0,0,0,0,0,0,0];
const a1_e4_rate_out = [1,0,0,0,0,0,0,0];
const a2_e4_rate_in = [1,0,0,0,0,0,0,0];
const a2_e2_rate_out = [1,0,0,0,0,0,0,0];
const a2_e3_rate_out = [1,0,0,0,0,0,0,0];
const end_e2_rate_in = [1,0,0,0,0,0,0,0];

--**************** Init Channel ****************--

const e2_I = [0,0,0,0,0,0,0,0];
const e3_I = [1,1,0,0,0,0,0,0];
const e4_I = [0,0,0,0,0,0,0,0];
const e5_I = [1,0,0,0,0,0,0,0];

const e1_I = [0,0,0,0,0,0,0,0];



--**************** Nodes Declaration ****************--

node a1(e1, e3, e5in :UsrInt) returns (e1_C, e3_C, e5in_C, e5out_P, e4_P :UsrInt; a1nbrFired: UsrInt );

var
e5out_PD, e4_PD :UsrInt;
let
a1nbrFired= if a1DoFire(e1, e3, e5in,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e1_C, e3_C, e5in_C,e5out_PD, e4_PD) = (UsrIntMult(a1nbrFired, a1_e1_rate_in),UsrIntMult(a1nbrFired, a1_e3_rate_in),UsrIntMult(a1nbrFired, a1_e5in_rate_in),UsrIntMult(a1nbrFired, a1_e5out_rate_out),UsrIntMult(a1nbrFired, a1_e4_rate_out));

e5out_P = UsrInt_0 -> pre (e5out_PD);

e4_P = UsrInt_0 -> pre (e4_PD);


tel;
------------------
node a1DoFire(e1, e3, e5in,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e1, UsrIntMult(times, a1_e1_rate_in)) 
	and UsrIntGte(e3, UsrIntMult(times, a1_e3_rate_in)) 
	and UsrIntGte(e5in, UsrIntMult(times, a1_e5in_rate_in)) 
	then true 
	else false;

tel;
------------------
node a2(e4 :UsrInt) returns (e4_C, e2_P, e3_P :UsrInt; a2nbrFired: UsrInt );

var
e2_PD, e3_PD :UsrInt;
let
a2nbrFired= if a2DoFire(e4,UsrInt_3) then UsrInt_3
		else if a2DoFire(e4,UsrInt_2) then UsrInt_2
		else if a2DoFire(e4,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e4_C,e2_PD, e3_PD) = (UsrIntMult(a2nbrFired, a2_e4_rate_in),UsrIntMult(a2nbrFired, a2_e2_rate_out),UsrIntMult(a2nbrFired, a2_e3_rate_out));

e2_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e2_PD)))))));

e3_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e3_PD)))))));


tel;
------------------
node a2DoFire(e4,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e4, UsrIntMult(times, a2_e4_rate_in)) 
	then true 
	else false;

tel;
------------------
node end(e2 :UsrInt) returns (e2_C :UsrInt; endnbrFired: UsrInt );

let
endnbrFired= if endDoFire(e2,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e2_C) = (UsrIntMult(endnbrFired, end_e2_rate_in));

tel;
------------------
node endDoFire(e2,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e2, UsrIntMult(times, end_e2_rate_in)) 
	then true 
	else false;

tel;
------------------
--**************** Const Rates ****************--

const a1b_e1b_rate_in = [1,0,0,0,0,0,0,0];
const a1b_e3b_rate_in = [1,0,0,0,0,0,0,0];
const a1b_e4b_rate_out = [1,0,0,0,0,0,0,0];
const a2b_e4b_rate_in = [1,0,0,0,0,0,0,0];
const a2b_e5bin_rate_in = [1,0,0,0,0,0,0,0];
const a2b_e5bout_rate_out = [1,0,0,0,0,0,0,0];
const a2b_e2b_rate_out = [1,0,0,0,0,0,0,0];
const a2b_e3b_rate_out = [1,0,0,0,0,0,0,0];
const endb_e2b_rate_in = [1,0,0,0,0,0,0,0];

--**************** Init Channel ****************--

const e2b_I = [0,0,0,0,0,0,0,0];
const e3b_I = [1,1,0,0,0,0,0,0];
const e4b_I = [0,0,0,0,0,0,0,0];
const e5b_I = [1,0,0,0,0,0,0,0];

const e1b_I = [0,0,0,0,0,0,0,0];

--**************** Nodes Declaration ****************--

node a1b(e1b, e3b :UsrInt) returns (e1b_C, e3b_C, e4b_P :UsrInt; a1bnbrFired: UsrInt );

var
e4b_PD :UsrInt;
let
a1bnbrFired= if a1bDoFire(e1b, e3b,UsrInt_4) then UsrInt_4
		else if a1bDoFire(e1b, e3b,UsrInt_3) then UsrInt_3
		else if a1bDoFire(e1b, e3b,UsrInt_2) then UsrInt_2
		else if a1bDoFire(e1b, e3b,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e1b_C, e3b_C,e4b_PD) = (UsrIntMult(a1bnbrFired, a1b_e1b_rate_in),UsrIntMult(a1bnbrFired, a1b_e3b_rate_in),UsrIntMult(a1bnbrFired, a1b_e4b_rate_out));

e4b_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e4b_PD)))))));


tel;
------------------
node a1bDoFire(e1b, e3b,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e1b, UsrIntMult(times, a1b_e1b_rate_in)) 
	and UsrIntGte(e3b, UsrIntMult(times, a1b_e3b_rate_in)) 
	then true 
	else false;

tel;
------------------
node a2b(e4b, e5bin :UsrInt) returns (e4b_C, e5bin_C, e5bout_P, e2b_P, e3b_P :UsrInt; a2bnbrFired: UsrInt );

var
e5bout_PD, e2b_PD, e3b_PD :UsrInt;
let
a2bnbrFired= if a2bDoFire(e4b, e5bin,UsrInt_4) then UsrInt_4
		else if a2bDoFire(e4b, e5bin,UsrInt_3) then UsrInt_3
		else if a2bDoFire(e4b, e5bin,UsrInt_2) then UsrInt_2
		else if a2bDoFire(e4b, e5bin,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e4b_C, e5bin_C,e5bout_PD, e2b_PD, e3b_PD) = (UsrIntMult(a2bnbrFired, a2b_e4b_rate_in),UsrIntMult(a2bnbrFired, a2b_e5bin_rate_in),UsrIntMult(a2bnbrFired, a2b_e5bout_rate_out),UsrIntMult(a2bnbrFired, a2b_e2b_rate_out),UsrIntMult(a2bnbrFired, a2b_e3b_rate_out));

e5bout_P = UsrInt_0 -> pre (e5bout_PD);

e2b_P = UsrInt_0 -> pre (e2b_PD);

e3b_P = UsrInt_0 -> pre (e3b_PD);


tel;
------------------
node a2bDoFire(e4b, e5bin,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e4b, UsrIntMult(times, a2b_e4b_rate_in)) 
	and UsrIntGte(e5bin, UsrIntMult(times, a2b_e5bin_rate_in)) 
	then true 
	else false;

tel;
------------------
node endb(e2b :UsrInt) returns (e2b_C :UsrInt; endbnbrFired: UsrInt );

let
endbnbrFired= if endbDoFire(e2b,UsrInt_4) then UsrInt_4
		else if endbDoFire(e2b,UsrInt_3) then UsrInt_3
		else if endbDoFire(e2b,UsrInt_2) then UsrInt_2
		else if endbDoFire(e2b,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e2b_C,) = (UsrIntMult(endbnbrFired, endb_e2b_rate_in));

tel;
------------------
node endbDoFire(e2b,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e2b, UsrIntMult(times, endb_e2b_rate_in)) 
	then true 
	else false;

tel;
------------------

--**************** Node topb Declaration ****************--

node topb (IN: UsrInt) returns (noError:bool);

-------------- Les variables -------------- 

var

e2, e3, e4, e5, e1, e2_P, e4_P, e4_C, a1nbrFired, a2nbrFired, endnbrFired :UsrInt;

e2_C, e3_C, e3_P, e5_C, e5_P , e1_C,  e1_P, e2b, e3b, e4b, e5b, e1b, e2b_P, e4b_P, e4b_C, a1bnbrFired, a2bnbrFired, endbnbrFired:UsrInt;
e2b_C , e3b_C, e3b_P, e5b_C, e5b_P, e1b_C : UsrInt;


let

--e1_P= if (UsrIntLt(UsrIntPlus( UsrIntMinus( e1b,e1b_C), IN), maxValue)  and UsrIntLt(UsrIntPlus( UsrIntMinus( e1,e1_C), IN), maxValue) ) then  IN 	else UsrInt_0;

e1_P= if UsrIntLt(UsrIntPlus( UsrIntMinus( e1b,e1b_C), IN), maxValue)  then  IN else UsrInt_0;


e1 = e1_I -> pre  UsrIntPlus( UsrIntMinus( e1, e1_C), e1_P);
e2 = e2_I -> pre UsrIntPlus( UsrIntMinus( e2,e2_C), e2_P);
e3 = e3_I -> pre UsrIntPlus( UsrIntMinus( e3,e3_C), e3_P);
e4 = e4_I -> pre UsrIntPlus( UsrIntMinus( e4,e4_C), e4_P);
e5 = e5_I -> pre UsrIntPlus( UsrIntMinus( e5,e5_C), e5_P);

(e1_C, e3_C, e5_C, e5_P, e4_P, a1nbrFired) = a1(e1, e3, e5);
(e4_C, e2_P, e3_P, a2nbrFired) = a2(e4);
(e2_C, endnbrFired) = end(e2);

e1b = e1b_I -> pre UsrIntPlus( UsrIntMinus( e1b,e1b_C), e1_P);
e2b = e2b_I -> pre UsrIntPlus( UsrIntMinus( e2b,e2b_C), e2b_P);
e3b = e3b_I -> pre UsrIntPlus( UsrIntMinus( e3b,e3b_C), e3b_P);
e4b = e4b_I -> pre UsrIntPlus( UsrIntMinus( e4b,e4b_C), e4b_P);
e5b = e5b_I -> pre UsrIntPlus( UsrIntMinus( e5b,e5b_C), e5b_P);

(e1b_C, e3b_C, e4b_P, a1bnbrFired) = a1b(e1b, e3b);
(e4b_C, e5b_C, e5b_P, e2b_P, e3b_P, a2bnbrFired) = a2b(e4b, e5b);
(e2b_C, endbnbrFired) = endb(e2b);

noError= UsrIntEq (e2b, e2);

assert UsrIntLte(IN, UsrInt_1) and UsrIntGte(IN, UsrInt_0);


tel;

