--** This lustre code is generated automatically on 01 juin 2020 01:42:31 PM
--**It corresponds to a translation to Lustre of the  SDFG model  of the design "example" 



--**************** Const Rates ****************--

const a1_e3_rate_in = 1;
const a1_e5in_rate_in = 1;
const a1_e5out_rate_out = 1;
const a1_e4_rate_out = 1;
const a2_e4_rate_in = 1;
const a2_e3_rate_out = 1;

--**************** Init Channel ****************--

const e3_I = 8 ;
const e4_I = 0 ;
const e5_I = 1 ;


--**************** Actors Translation ****************--

node a1(e3, e5in :int) returns (e3_C, e5in_C, e5out_P, e4_P :int; a1nbrFired: int );

var
e5out_PD, e4_PD : int;
let
a1nbrFired= if a1DoFire(e3, e5in,1) then 1
		else 0;

(e3_C, e5in_C,e5out_PD, e4_PD) = ((a1nbrFired * a1_e3_rate_in), (a1nbrFired * a1_e5in_rate_in), (a1nbrFired * a1_e5out_rate_out), (a1nbrFired * a1_e4_rate_out));

e5out_P = 0 -> pre (0 -> pre (e5out_PD));

e4_P = 0 -> pre (0 -> pre (e4_PD));


tel;
------------------
node a1DoFire(e3, e5in :int; times: int) returns ( yes: bool);
let

yes = if  (e3>=  (times * a1_e3_rate_in)) 
	and  (e5in>=  (times * a1_e5in_rate_in)) 
	then true 
	else false;

tel;
------------------
node a2(e4 :int) returns (e4_C, e3_P :int; a2nbrFired: int );

var
e3_PD : int;
let
a2nbrFired= if a2DoFire(e4,1) then 1
		else 0;

(e4_C,e3_PD) = ((a2nbrFired * a2_e4_rate_in), (a2nbrFired * a2_e3_rate_out));

e3_P = 0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (0 -> pre (e3_PD))))))))))))))))))))))))));


tel;
------------------
node a2DoFire(e4 :int; times: int) returns ( yes: bool);
let

yes = if  (e4>=  (times * a2_e4_rate_in)) 
	then true 
	else false;

tel;
------------------
node top (_: bool) returns (e3, e4, e5, a1nbrFired, a2nbrFired: int);

-------------- Les variables -------------- 

var

e3_C, e3_P: int; 
e4_C, e4_P: int; 
e5_C, e5_P: int; 
positiveValues: bool;


let

e3 = e3_I -> pre  (  ( e3-e3_C)+ e3_P);
e4 = e4_I -> pre  (  ( e4-e4_C)+ e4_P);
e5 = e5_I -> pre  (  ( e5-e5_C)+ e5_P);



(e3_C, e5_C, e5_P, e4_P, a1nbrFired) = a1(e3, e5);
(e4_C, e3_P, a2nbrFired) = a2(e4);


positiveValues = ( e3>=   0) 
	and  ( e4>=   0) 
	and  ( e5>=   0) 
	and  ( a1nbrFired >= 0) 
	and  ( a2nbrFired >= 0) ;

--%MAIN;

--%PROPERTY  "Ok, all variables are positive "  positiveValues;


tel;

