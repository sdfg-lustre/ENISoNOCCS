--** This lustre code is generated automatically on 15 juin 2020 10:18:47 PM
--**It corresponds to a translation to Lustre of the  SDFG model  of the design "example" 



--**************** Const Rates ****************--

const a_e1in_rate_in = 1;
const a_e1out_rate_out = 1;
const a_e2_rate_out = 1;
const b_e2_rate_in = 1;
const b_e4_rate_in = 2;
const b_e3_rate_out = 2;
const c_e3_rate_in = 3;
const c_e4_rate_out = 3;

--**************** Init Channel ****************--

const e2_I = 1 ;
const e3_I = 3 ;
const e4_I = 1 ;
const e1_I = 1 ;


--**************** Actors Translation ****************--

node a(e1in :int) returns (e1in_C, e1out_P, e2_P :int; anbrFired: int );

var
anbrEnd: int;
let
anbrFired= if aDoFire(e1in,1) then 1
		else 0;

anbrEnd= 0 -> pre (0 -> pre (anbrFired));



(e1in_C) = ((anbrFired * a_e1in_rate_in));

(e1out_P, e2_P) = ((anbrEnd * a_e1out_rate_out), (anbrEnd * a_e2_rate_out));

tel;
------------------
node aDoFire(e1in :int; times: int) returns ( yes: bool);
let

yes = if  (e1in>=  (times * a_e1in_rate_in)) 
	then true 
	else false;

tel;
------------------
node b(e2, e4 :int) returns (e2_C, e4_C, e3_P :int; bnbrFired: int );

var
bnbrEnd: int;
let
bnbrFired= if bDoFire(e2, e4,2) then 2
		else if bDoFire(e2, e4,1) then 1
		else 0;

bnbrEnd= 0 -> pre (bnbrFired);



(e2_C, e4_C) = ((bnbrFired * b_e2_rate_in), (bnbrFired * b_e4_rate_in));

(e3_P) = ((bnbrEnd * b_e3_rate_out));

tel;
------------------
node bDoFire(e2, e4 :int; times: int) returns ( yes: bool);
let

yes = if  (e2>=  (times * b_e2_rate_in)) 
	and  (e4>=  (times * b_e4_rate_in)) 
	then true 
	else false;

tel;
------------------
node c(e3 :int) returns (e3_C, e4_P :int; cnbrFired: int );

var
cnbrEnd: int;
let
cnbrFired= if cDoFire(e3,2) then 2
		else if cDoFire(e3,1) then 1
		else 0;

cnbrEnd= 0 -> pre (cnbrFired);



(e3_C) = ((cnbrFired * c_e3_rate_in));

(e4_P) = ((cnbrEnd * c_e4_rate_out));

tel;
------------------
node cDoFire(e3 :int; times: int) returns ( yes: bool);
let

yes = if  (e3>=  (times * c_e3_rate_in)) 
	then true 
	else false;

tel;
------------------
node top (_: bool) returns (e2, e3, e4, e1, anbrFired, bnbrFired, cnbrFired: int);

-------------- Les variables -------------- 

var

e2_C, e2_P: int; 
e3_C, e3_P: int; 
e4_C, e4_P: int; 
e1_C, e1_P: int; 
positiveValues: bool;


let

e2 = e2_I -> pre  (   e2-e2_C)+ e2_P;
e3 = e3_I -> pre  (   e3-e3_C)+ e3_P;
e4 = e4_I -> pre  (   e4-e4_C)+ e4_P;
e1 = e1_I -> pre  (   e1-e1_C)+ e1_P;



(e1_C, e1_P, e2_P, anbrFired) = a(e1);
(e2_C, e4_C, e3_P, bnbrFired) = b(e2, e4);
(e3_C, e4_P, cnbrFired) = c(e3);


positiveValues = ( e2>=   0) 
	and  ( e3>=   0) 
	and  ( e4>=   0) 
	and  ( e1>=   0) 
	and  ( anbrFired >= 0) 
	and  ( bnbrFired >= 0) 
	and  ( cnbrFired >= 0) ;

--%MAIN;

--%PROPERTY  "Ok, all variables are positive "  positiveValues;


tel;

