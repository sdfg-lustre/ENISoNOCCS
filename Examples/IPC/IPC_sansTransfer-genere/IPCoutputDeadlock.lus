include "./toInclude_BitBlasting_ok.lus"

const maxValue = [1,1,1,1,0,0,0,0];

--**************** Const Rates ****************--

const P1_e1_rate_in = [1,0,0,0,0,0,0,0];
const P1_e2_rate_out = [1,0,0,0,0,0,0,0];
const W1_e2_rate_in = [1,0,0,0,0,0,0,0];
const W1_e6_rate_in = [1,0,0,0,0,0,0,0];
const W1_e3_rate_out = [1,0,0,0,0,0,0,0];
const W1_e5_rate_out = [1,0,0,0,0,0,0,0];
const P2_e3_rate_in = [1,0,0,0,0,0,0,0];
const P2_e4_rate_out = [1,0,0,0,0,0,0,0];
const W2_e4_rate_in = [1,0,0,0,0,0,0,0];
const W2_e7_rate_in = [1,0,0,0,0,0,0,0];
const W2_e1_rate_out = [1,0,0,0,0,0,0,0];
const W2_e8_rate_out = [1,0,0,0,0,0,0,0];
const W2_e19_rate_out = [1,0,0,0,0,0,0,0];
const R1_e5_rate_in = [1,0,0,0,0,0,0,0];
const R1_e17_rate_in = [1,0,0,0,0,0,0,0];
const R1_e7_rate_out = [1,0,0,0,0,0,0,0];
const R1_e11_rate_out = [1,0,0,0,0,0,0,0];
const R2_e11_rate_in = [1,0,0,0,0,0,0,0];
const R2_e8_rate_in = [1,0,0,0,0,0,0,0];
const R2_e6_rate_out = [1,0,0,0,0,0,0,0];
const R2_e16_rate_out = [1,0,0,0,0,0,0,0];
const C_e16_rate_in = [1,0,0,0,0,0,0,0];
const C_e17_rate_out = [1,0,0,0,0,0,0,0];
const C_e18_rate_out = [1,0,0,0,0,0,0,0];
const temp_e19_rate_in = [1,0,0,0,0,0,0,0];
const temp_e18_rate_in = [1,0,0,0,0,0,0,0];

--**************** Init Channel ****************--

const e1_I = [1,0,0,0,0,0,0,0];
const e2_I = [0,0,0,0,0,0,0,0];
const e3_I = [0,0,0,0,0,0,0,0];
const e4_I = [0,0,0,0,0,0,0,0];
const e5_I = [0,0,0,0,0,0,0,0];
const e6_I = [1,0,0,0,0,0,0,0];
const e7_I = [0,0,0,0,0,0,0,0];
const e8_I = [0,0,0,0,0,0,0,0];
const e11_I = [0,0,0,0,0,0,0,0];
const e16_I = [0,0,0,0,0,0,0,0];
const e17_I = [1,0,0,0,0,0,0,0];
const e18_I = [0,0,0,0,0,0,0,0];
const e19_I = [0,0,0,0,0,0,0,0];


--**************** Nodes Declaration ****************--

node P1(e1 :UsrInt) returns (e1_C, e2_P :UsrInt; P1nbrFired: UsrInt );

let
P1nbrFired= if P1DoFire(e1,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e1_C,e2_P) = (UsrIntMult(P1nbrFired, P1_e1_rate_in),UsrIntMult(P1nbrFired, P1_e2_rate_out));

tel;
------------------
node P1DoFire(e1,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e1, UsrIntMult(times, P1_e1_rate_in)) 
	then true 
	else false;

tel;
------------------
node W1(e2, e6 :UsrInt) returns (e2_C, e6_C, e3_P, e5_P :UsrInt; W1nbrFired: UsrInt );

let
W1nbrFired= if W1DoFire(e2, e6,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e2_C, e6_C,e3_P, e5_P) = (UsrIntMult(W1nbrFired, W1_e2_rate_in),UsrIntMult(W1nbrFired, W1_e6_rate_in),UsrIntMult(W1nbrFired, W1_e3_rate_out),UsrIntMult(W1nbrFired, W1_e5_rate_out));

tel;
------------------
node W1DoFire(e2, e6,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e2, UsrIntMult(times, W1_e2_rate_in)) 
	and UsrIntGte(e6, UsrIntMult(times, W1_e6_rate_in)) 
	then true 
	else false;

tel;
------------------
node P2(e3 :UsrInt) returns (e3_C, e4_P :UsrInt; P2nbrFired: UsrInt );

let
P2nbrFired= if P2DoFire(e3,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e3_C,e4_P) = (UsrIntMult(P2nbrFired, P2_e3_rate_in),UsrIntMult(P2nbrFired, P2_e4_rate_out));

tel;
------------------
node P2DoFire(e3,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e3, UsrIntMult(times, P2_e3_rate_in)) 
	then true 
	else false;

tel;
------------------
node W2(e4, e7 :UsrInt) returns (e4_C, e7_C, e1_P, e8_P, e19_P :UsrInt; W2nbrFired: UsrInt );

let
W2nbrFired= if W2DoFire(e4, e7,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e4_C, e7_C,e1_P, e8_P, e19_P) = (UsrIntMult(W2nbrFired, W2_e4_rate_in),UsrIntMult(W2nbrFired, W2_e7_rate_in),UsrIntMult(W2nbrFired, W2_e1_rate_out),UsrIntMult(W2nbrFired, W2_e8_rate_out),UsrIntMult(W2nbrFired, W2_e19_rate_out));

tel;
------------------
node W2DoFire(e4, e7,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e4, UsrIntMult(times, W2_e4_rate_in)) 
	and UsrIntGte(e7, UsrIntMult(times, W2_e7_rate_in)) 
	then true 
	else false;

tel;
------------------
node R1(e5, e17 :UsrInt) returns (e5_C, e17_C, e7_P, e11_P :UsrInt; R1nbrFired: UsrInt );

let
R1nbrFired= if R1DoFire(e5, e17,UsrInt_2) then UsrInt_2
		else if R1DoFire(e5, e17,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e5_C, e17_C,e7_P, e11_P) = (UsrIntMult(R1nbrFired, R1_e5_rate_in),UsrIntMult(R1nbrFired, R1_e17_rate_in),UsrIntMult(R1nbrFired, R1_e7_rate_out),UsrIntMult(R1nbrFired, R1_e11_rate_out));

tel;
------------------
node R1DoFire(e5, e17,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e5, UsrIntMult(times, R1_e5_rate_in)) 
	and UsrIntGte(e17, UsrIntMult(times, R1_e17_rate_in)) 
	then true 
	else false;

tel;
------------------
node R2(e11, e8 :UsrInt) returns (e11_C, e8_C, e6_P, e16_P :UsrInt; R2nbrFired: UsrInt );

let
R2nbrFired= if R2DoFire(e11, e8,UsrInt_2) then UsrInt_2
		else if R2DoFire(e11, e8,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e11_C, e8_C,e6_P, e16_P) = (UsrIntMult(R2nbrFired, R2_e11_rate_in),UsrIntMult(R2nbrFired, R2_e8_rate_in),UsrIntMult(R2nbrFired, R2_e6_rate_out),UsrIntMult(R2nbrFired, R2_e16_rate_out));

tel;
------------------
node R2DoFire(e11, e8,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e11, UsrIntMult(times, R2_e11_rate_in)) 
	and UsrIntGte(e8, UsrIntMult(times, R2_e8_rate_in)) 
	then true 
	else false;

tel;
------------------
node C(e16 :UsrInt) returns (e16_C, e17_P, e18_P :UsrInt; CnbrFired: UsrInt );

let
CnbrFired= if CDoFire(e16,UsrInt_2) then UsrInt_2
		else if CDoFire(e16,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e16_C,e17_P, e18_P) = (UsrIntMult(CnbrFired, C_e16_rate_in),UsrIntMult(CnbrFired, C_e17_rate_out),UsrIntMult(CnbrFired, C_e18_rate_out));

tel;
------------------
node CDoFire(e16,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e16, UsrIntMult(times, C_e16_rate_in)) 
	then true 
	else false;

tel;
------------------
node temp(e19, e18 :UsrInt) returns (e19_C, e18_C :UsrInt; tempnbrFired: UsrInt );

let
tempnbrFired= if tempDoFire(e19, e18,UsrInt_2) then UsrInt_2
		else if tempDoFire(e19, e18,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e19_C, e18_C,) = (UsrIntMult(tempnbrFired, temp_e19_rate_in),UsrIntMult(tempnbrFired, temp_e18_rate_in));

tel;
------------------
node tempDoFire(e19, e18,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e19, UsrIntMult(times, temp_e19_rate_in)) 
	and UsrIntGte(e18, UsrIntMult(times, temp_e18_rate_in)) 
	then true 
	else false;

tel;
------------------

--**************** Node Top Declaration ****************--

node top (xx: UsrInt) returns (e1, e2, e3, e4, e5, e6, e7, e8, e11, e16, e17, e18, e19, P1nbrFired, W1nbrFired, P2nbrFired, W2nbrFired, R1nbrFired, R2nbrFired, CnbrFired, tempnbrFired:UsrInt);

-------------- Les variables -------------- 

var

e1_C, e1_P: UsrInt; 
e2_C, e2_P: UsrInt; 
e3_C, e3_P: UsrInt; 
e4_C, e4_P: UsrInt; 
e5_C, e5_P: UsrInt; 
e6_C, e6_P: UsrInt; 
e7_C, e7_P: UsrInt; 
e8_C, e8_P: UsrInt; 
e11_C, e11_P: UsrInt; 
e16_C, e16_P: UsrInt; 
e17_C, e17_P: UsrInt; 
e18_C, e18_P: UsrInt; 
e19_C, e19_P: UsrInt; 

let

e1 = e1_I -> pre UsrIntPlus( UsrIntMinus( e1,e1_C), e1_P);
e2 = e2_I -> pre UsrIntPlus( UsrIntMinus( e2,e2_C), e2_P);
e3 = e3_I -> pre UsrIntPlus( UsrIntMinus( e3,e3_C), e3_P);
e4 = e4_I -> pre UsrIntPlus( UsrIntMinus( e4,e4_C), e4_P);
e5 = e5_I -> pre UsrIntPlus( UsrIntMinus( e5,e5_C), e5_P);
e6 = e6_I -> pre UsrIntPlus( UsrIntMinus( e6,e6_C), e6_P);
e7 = e7_I -> pre UsrIntPlus( UsrIntMinus( e7,e7_C), e7_P);
e8 = e8_I -> pre UsrIntPlus( UsrIntMinus( e8,e8_C), e8_P);
e11 = e11_I -> pre UsrIntPlus( UsrIntMinus( e11,e11_C), e11_P);
e16 = e16_I -> pre UsrIntPlus( UsrIntMinus( e16,e16_C), e16_P);
e17 = e17_I -> pre UsrIntPlus( UsrIntMinus( e17,e17_C), e17_P);
e18 = e18_I -> pre UsrIntPlus( UsrIntMinus( e18,e18_C), e18_P);
e19 = e19_I -> pre UsrIntPlus( UsrIntMinus( e19,e19_C), e19_P);



(e1_C, e2_P, P1nbrFired) = P1(e1);
(e2_C, e6_C, e3_P, e5_P, W1nbrFired) = W1(e2, e6);
(e3_C, e4_P, P2nbrFired) = P2(e3);
(e4_C, e7_C, e1_P, e8_P, e19_P, W2nbrFired) = W2(e4, e7);
(e5_C, e17_C, e7_P, e11_P, R1nbrFired) = R1(e5, e17);
(e11_C, e8_C, e6_P, e16_P, R2nbrFired) = R2(e11, e8);
(e16_C, e17_P, e18_P, CnbrFired) = C(e16);
(e19_C, e18_C, tempnbrFired) = temp(e19, e18);


tel;


--**************** Node Harness Declaration ****************--

node Harness (xx: UsrInt) returns (noError :bool)

var

e1, e2, e3, e4, e5, e6, e7, e8, e11, e16, e17, e18, e19, P1nbrFired, W1nbrFired, P2nbrFired, W2nbrFired, R1nbrFired, R2nbrFired, CnbrFired, tempnbrFired:UsrInt;

noDeadlock : bool;

let

(e1, e2, e3, e4, e5, e6, e7, e8, e11, e16, e17, e18, e19, P1nbrFired, W1nbrFired, P2nbrFired, W2nbrFired, R1nbrFired, R2nbrFired, CnbrFired, tempnbrFired) = top(xx);

noDeadlock = UsrIntGte( P1nbrFired , UsrInt_1) 
	or UsrIntGte( W1nbrFired , UsrInt_1) 
	or UsrIntGte( P2nbrFired , UsrInt_1) 
	or UsrIntGte( W2nbrFired , UsrInt_1) 
	or UsrIntGte( R1nbrFired , UsrInt_1) 
	or UsrIntGte( R2nbrFired , UsrInt_1) 
	or UsrIntGte( CnbrFired , UsrInt_1) 
	or UsrIntGte( tempnbrFired , UsrInt_1);

noError= noDeadlock;

tel
