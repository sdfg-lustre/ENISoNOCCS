include "./toInclude_BitBlasting_ok.lus"

const maxValue = [1,1,1,1,0,0,0,0];

--**************** Const Rates ****************--

const P1_e1_rate_in = [1,0,0,0,0,0,0,0];
const P1_e2_rate_out = [1,0,0,0,0,0,0,0];
const P1_e21_rate_out = [1,0,0,0,0,0,0,0];
const W1_e2_rate_in = [1,0,0,0,0,0,0,0];
const W1_e5_rate_in = [1,0,0,0,0,0,0,0];
const W1_e3_rate_out = [1,0,0,0,0,0,0,0];
const W1_e6_rate_out = [1,0,0,0,0,0,0,0];
const W1_e26_rate_out = [1,0,0,0,0,0,0,0];
const P2_e3_rate_in = [1,0,0,0,0,0,0,0];
const P2_e4_rate_out = [1,0,0,0,0,0,0,0];
const W2_e4_rate_in = [1,0,0,0,0,0,0,0];
const W2_e7_rate_in = [1,0,0,0,0,0,0,0];
const W2_e1_rate_out = [1,0,0,0,0,0,0,0];
const W2_e8_rate_out = [1,0,0,0,0,0,0,0];
const T1_e6_rate_in = [1,0,0,0,0,0,0,0];
const T1_e9_rate_in = [1,0,0,0,0,0,0,0];
const T1_e15_rate_in = [1,0,0,0,0,0,0,0];
const T1_e5_rate_out = [1,0,0,0,0,0,0,0];
const T1_e10_rate_out = [1,0,0,0,0,0,0,0];
const T1_e11_rate_out = [1,0,0,0,0,0,0,0];
const T2_e8_rate_in = [1,0,0,0,0,0,0,0];
const T2_e10_rate_in = [1,0,0,0,0,0,0,0];
const T2_e14_rate_in = [1,0,0,0,0,0,0,0];
const T2_e7_rate_out = [1,0,0,0,0,0,0,0];
const T2_e9_rate_out = [1,0,0,0,0,0,0,0];
const T2_e13_rate_out = [1,0,0,0,0,0,0,0];
const R1_e11_rate_in = [1,0,0,0,0,0,0,0];
const R1_e17_rate_in = [1,0,0,0,0,0,0,0];
const R1_e14_rate_out = [1,0,0,0,0,0,0,0];
const R1_e23_rate_out = [1,0,0,0,0,0,0,0];
const R1_e27_rate_out = [1,0,0,0,0,0,0,0];
const R1_e28_rate_out = [1,0,0,0,0,0,0,0];
const R2_e13_rate_in = [1,0,0,0,0,0,0,0];
const R2_e15_rate_out = [1,0,0,0,0,0,0,0];
const R2_e16_rate_out = [1,0,0,0,0,0,0,0];
const R2_e24_rate_out = [1,0,0,0,0,0,0,0];
const R2_e29_rate_out = [1,0,0,0,0,0,0,0];
const C_e16_rate_in = [1,0,0,0,0,0,0,0];
const C_e18_in_rate_in = [1,0,0,0,0,0,0,0];
const C_e20_rate_in = [1,0,0,0,0,0,0,0];
const C_e18_out_rate_out = [1,0,0,0,0,0,0,0];
const C_e19_rate_out = [1,0,0,0,0,0,0,0];
const C_e25_rate_out = [1,0,0,0,0,0,0,0];
const C2_e19_rate_in = [1,0,0,0,0,0,0,0];
const C2_e20_rate_out = [1,0,0,0,0,0,0,0];
const C2_e17_rate_out = [1,0,0,0,0,0,0,0];
const C2_e22_rate_out = [1,0,0,0,0,0,0,0];
const puit1_e21_rate_in = [1,0,0,0,0,0,0,0];
const puit1_e22_rate_in = [1,0,0,0,0,0,0,0];
const puit2_e23_rate_in = [1,0,0,0,0,0,0,0];
const puit2_e24_rate_in = [1,0,0,0,0,0,0,0];
const puit2_e25_rate_in = [1,0,0,0,0,0,0,0];
const puit3_e26_rate_in = [1,0,0,0,0,0,0,0];
const puit3_e27_rate_in = [1,0,0,0,0,0,0,0];
const puit4_e28_rate_in = [1,0,0,0,0,0,0,0];
const puit4_e29_rate_in = [1,0,0,0,0,0,0,0];

--**************** Init Channel ****************--

const e1_I = [1,0,0,0,0,0,0,0];
const e2_I = [0,0,0,0,0,0,0,0];
const e3_I = [0,0,0,0,0,0,0,0];
const e4_I = [0,0,0,0,0,0,0,0];
const e5_I = [1,0,0,0,0,0,0,0];
const e6_I = [0,0,0,0,0,0,0,0];
const e7_I = [1,0,0,0,0,0,0,0];
const e8_I = [0,0,0,0,0,0,0,0];
const e9_I = [1,0,0,0,0,0,0,0];
const e10_I = [0,0,0,0,0,0,0,0];
const e11_I = [0,0,0,0,0,0,0,0];
const e13_I = [0,0,0,0,0,0,0,0];
const e14_I = [0,0,0,0,0,0,0,0];
const e15_I = [1,0,0,0,0,0,0,0];
const e16_I = [0,0,0,0,0,0,0,0];
const e18_I = [1,0,0,0,0,0,0,0];
const e19_I = [0,0,0,0,0,0,0,0];
const e20_I = [1,1,0,0,0,0,0,0];
const e17_I = [1,0,0,0,0,0,0,0];
const e21_I = [0,0,0,0,0,0,0,0];
const e22_I = [0,0,0,0,0,0,0,0];
const e23_I = [0,0,0,0,0,0,0,0];
const e24_I = [0,0,0,0,0,0,0,0];
const e25_I = [0,0,0,0,0,0,0,0];
const e26_I = [0,0,0,0,0,0,0,0];
const e27_I = [0,0,0,0,0,0,0,0];
const e28_I = [0,0,0,0,0,0,0,0];
const e29_I = [0,0,0,0,0,0,0,0];


--**************** Nodes Declaration ****************--

node P1(e1 :UsrInt) returns (e1_C, e2_P, e21_P :UsrInt; P1nbrFired: UsrInt );

var
e2_PD, e21_PD :UsrInt;
let
P1nbrFired= if P1DoFire(e1,UsrInt_3) then UsrInt_3
		else if P1DoFire(e1,UsrInt_2) then UsrInt_2
		else if P1DoFire(e1,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e1_C,e2_PD, e21_PD) = (UsrIntMult(P1nbrFired, P1_e1_rate_in),UsrIntMult(P1nbrFired, P1_e2_rate_out),UsrIntMult(P1nbrFired, P1_e21_rate_out));

e2_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e2_PD))));

e21_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e21_PD))));


tel;
------------------
node P1DoFire(e1,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e1, UsrIntMult(times, P1_e1_rate_in)) 
	then true 
	else false;

tel;
------------------
node W1(e2, e5 :UsrInt) returns (e2_C, e5_C, e3_P, e6_P, e26_P :UsrInt; W1nbrFired: UsrInt );

let
W1nbrFired= if W1DoFire(e2, e5,UsrInt_3) then UsrInt_3
		else if W1DoFire(e2, e5,UsrInt_2) then UsrInt_2
		else if W1DoFire(e2, e5,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e2_C, e5_C,e3_P, e6_P, e26_P) = (UsrIntMult(W1nbrFired, W1_e2_rate_in),UsrIntMult(W1nbrFired, W1_e5_rate_in),UsrIntMult(W1nbrFired, W1_e3_rate_out),UsrIntMult(W1nbrFired, W1_e6_rate_out),UsrIntMult(W1nbrFired, W1_e26_rate_out));

tel;
------------------
node W1DoFire(e2, e5,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e2, UsrIntMult(times, W1_e2_rate_in)) 
	and UsrIntGte(e5, UsrIntMult(times, W1_e5_rate_in)) 
	then true 
	else false;

tel;
------------------
node P2(e3 :UsrInt) returns (e3_C, e4_P :UsrInt; P2nbrFired: UsrInt );

var
e4_PD :UsrInt;
let
P2nbrFired= if P2DoFire(e3,UsrInt_3) then UsrInt_3
		else if P2DoFire(e3,UsrInt_2) then UsrInt_2
		else if P2DoFire(e3,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e3_C,e4_PD) = (UsrIntMult(P2nbrFired, P2_e3_rate_in),UsrIntMult(P2nbrFired, P2_e4_rate_out));

e4_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e4_PD))));


tel;
------------------
node P2DoFire(e3,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e3, UsrIntMult(times, P2_e3_rate_in)) 
	then true 
	else false;

tel;
------------------
node W2(e4, e7 :UsrInt) returns (e4_C, e7_C, e1_P, e8_P :UsrInt; W2nbrFired: UsrInt );

let
W2nbrFired= if W2DoFire(e4, e7,UsrInt_3) then UsrInt_3
		else if W2DoFire(e4, e7,UsrInt_2) then UsrInt_2
		else if W2DoFire(e4, e7,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e4_C, e7_C,e1_P, e8_P) = (UsrIntMult(W2nbrFired, W2_e4_rate_in),UsrIntMult(W2nbrFired, W2_e7_rate_in),UsrIntMult(W2nbrFired, W2_e1_rate_out),UsrIntMult(W2nbrFired, W2_e8_rate_out));

tel;
------------------
node W2DoFire(e4, e7,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e4, UsrIntMult(times, W2_e4_rate_in)) 
	and UsrIntGte(e7, UsrIntMult(times, W2_e7_rate_in)) 
	then true 
	else false;

tel;
------------------
node T1(e6, e9, e15 :UsrInt) returns (e6_C, e9_C, e15_C, e5_P, e10_P, e11_P :UsrInt; T1nbrFired: UsrInt );

var
e5_PD, e10_PD, e11_PD :UsrInt;
let
T1nbrFired= if T1DoFire(e6, e9, e15,UsrInt_3) then UsrInt_3
		else if T1DoFire(e6, e9, e15,UsrInt_2) then UsrInt_2
		else if T1DoFire(e6, e9, e15,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e6_C, e9_C, e15_C,e5_PD, e10_PD, e11_PD) = (UsrIntMult(T1nbrFired, T1_e6_rate_in),UsrIntMult(T1nbrFired, T1_e9_rate_in),UsrIntMult(T1nbrFired, T1_e15_rate_in),UsrIntMult(T1nbrFired, T1_e5_rate_out),UsrIntMult(T1nbrFired, T1_e10_rate_out),UsrIntMult(T1nbrFired, T1_e11_rate_out));

e5_P = UsrInt_0 -> pre (e5_PD);

e10_P = UsrInt_0 -> pre (e10_PD);

e11_P = UsrInt_0 -> pre (e11_PD);


tel;
------------------
node T1DoFire(e6, e9, e15,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e6, UsrIntMult(times, T1_e6_rate_in)) 
	and UsrIntGte(e9, UsrIntMult(times, T1_e9_rate_in)) 
	and UsrIntGte(e15, UsrIntMult(times, T1_e15_rate_in)) 
	then true 
	else false;

tel;
------------------
node T2(e8, e10, e14 :UsrInt) returns (e8_C, e10_C, e14_C, e7_P, e9_P, e13_P :UsrInt; T2nbrFired: UsrInt );

var
e7_PD, e9_PD, e13_PD :UsrInt;
let
T2nbrFired= if T2DoFire(e8, e10, e14,UsrInt_3) then UsrInt_3
		else if T2DoFire(e8, e10, e14,UsrInt_2) then UsrInt_2
		else if T2DoFire(e8, e10, e14,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e8_C, e10_C, e14_C,e7_PD, e9_PD, e13_PD) = (UsrIntMult(T2nbrFired, T2_e8_rate_in),UsrIntMult(T2nbrFired, T2_e10_rate_in),UsrIntMult(T2nbrFired, T2_e14_rate_in),UsrIntMult(T2nbrFired, T2_e7_rate_out),UsrIntMult(T2nbrFired, T2_e9_rate_out),UsrIntMult(T2nbrFired, T2_e13_rate_out));

e7_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e7_PD)));

e9_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e9_PD)));

e13_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e13_PD)));


tel;
------------------
node T2DoFire(e8, e10, e14,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e8, UsrIntMult(times, T2_e8_rate_in)) 
	and UsrIntGte(e10, UsrIntMult(times, T2_e10_rate_in)) 
	and UsrIntGte(e14, UsrIntMult(times, T2_e14_rate_in)) 
	then true 
	else false;

tel;
------------------
node R1(e11, e17 :UsrInt) returns (e11_C, e17_C, e14_P, e23_P, e27_P, e28_P :UsrInt; R1nbrFired: UsrInt );

let
R1nbrFired= if R1DoFire(e11, e17,UsrInt_2) then UsrInt_2
		else if R1DoFire(e11, e17,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e11_C, e17_C,e14_P, e23_P, e27_P, e28_P) = (UsrIntMult(R1nbrFired, R1_e11_rate_in),UsrIntMult(R1nbrFired, R1_e17_rate_in),UsrIntMult(R1nbrFired, R1_e14_rate_out),UsrIntMult(R1nbrFired, R1_e23_rate_out),UsrIntMult(R1nbrFired, R1_e27_rate_out),UsrIntMult(R1nbrFired, R1_e28_rate_out));

tel;
------------------
node R1DoFire(e11, e17,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e11, UsrIntMult(times, R1_e11_rate_in)) 
	and UsrIntGte(e17, UsrIntMult(times, R1_e17_rate_in)) 
	then true 
	else false;

tel;
------------------
node R2(e13 :UsrInt) returns (e13_C, e15_P, e16_P, e24_P, e29_P :UsrInt; R2nbrFired: UsrInt );

let
R2nbrFired= if R2DoFire(e13,UsrInt_2) then UsrInt_2
		else if R2DoFire(e13,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e13_C,e15_P, e16_P, e24_P, e29_P) = (UsrIntMult(R2nbrFired, R2_e13_rate_in),UsrIntMult(R2nbrFired, R2_e15_rate_out),UsrIntMult(R2nbrFired, R2_e16_rate_out),UsrIntMult(R2nbrFired, R2_e24_rate_out),UsrIntMult(R2nbrFired, R2_e29_rate_out));

tel;
------------------
node R2DoFire(e13,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e13, UsrIntMult(times, R2_e13_rate_in)) 
	then true 
	else false;

tel;
------------------
node C(e16, e18_in, e20 :UsrInt) returns (e16_C, e18_in_C, e20_C, e18_out_P, e19_P, e25_P :UsrInt; CnbrFired: UsrInt );

var
e18_out_PD, e19_PD, e25_PD :UsrInt;
let
CnbrFired= if CDoFire(e16, e18_in, e20,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e16_C, e18_in_C, e20_C,e18_out_PD, e19_PD, e25_PD) = (UsrIntMult(CnbrFired, C_e16_rate_in),UsrIntMult(CnbrFired, C_e18_in_rate_in),UsrIntMult(CnbrFired, C_e20_rate_in),UsrIntMult(CnbrFired, C_e18_out_rate_out),UsrIntMult(CnbrFired, C_e19_rate_out),UsrIntMult(CnbrFired, C_e25_rate_out));

e18_out_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e18_out_PD)))));

e19_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e19_PD)))));

e25_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e25_PD)))));


tel;
------------------
node CDoFire(e16, e18_in, e20,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e16, UsrIntMult(times, C_e16_rate_in)) 
	and UsrIntGte(e18_in, UsrIntMult(times, C_e18_in_rate_in)) 
	and UsrIntGte(e20, UsrIntMult(times, C_e20_rate_in)) 
	then true 
	else false;

tel;
------------------
node C2(e19 :UsrInt) returns (e19_C, e20_P, e17_P, e22_P :UsrInt; C2nbrFired: UsrInt );

var
e20_PD, e17_PD, e22_PD :UsrInt;
let
C2nbrFired= if C2DoFire(e19,UsrInt_3) then UsrInt_3
		else if C2DoFire(e19,UsrInt_2) then UsrInt_2
		else if C2DoFire(e19,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e19_C,e20_PD, e17_PD, e22_PD) = (UsrIntMult(C2nbrFired, C2_e19_rate_in),UsrIntMult(C2nbrFired, C2_e20_rate_out),UsrIntMult(C2nbrFired, C2_e17_rate_out),UsrIntMult(C2nbrFired, C2_e22_rate_out));

e20_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e20_PD)))))))));

e17_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e17_PD)))))))));

e22_P = UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (UsrInt_0 -> pre (e22_PD)))))))));


tel;
------------------
node C2DoFire(e19,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e19, UsrIntMult(times, C2_e19_rate_in)) 
	then true 
	else false;

tel;
------------------
node puit1(e21, e22 :UsrInt) returns (e21_C, e22_C :UsrInt; puit1nbrFired: UsrInt );

let
puit1nbrFired= if puit1DoFire(e21, e22,UsrInt_3) then UsrInt_3
		else if puit1DoFire(e21, e22,UsrInt_2) then UsrInt_2
		else if puit1DoFire(e21, e22,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e21_C, e22_C,) = (UsrIntMult(puit1nbrFired, puit1_e21_rate_in),UsrIntMult(puit1nbrFired, puit1_e22_rate_in));

tel;
------------------
node puit1DoFire(e21, e22,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e21, UsrIntMult(times, puit1_e21_rate_in)) 
	and UsrIntGte(e22, UsrIntMult(times, puit1_e22_rate_in)) 
	then true 
	else false;

tel;
------------------
node puit2(e23, e24, e25 :UsrInt) returns (e23_C, e24_C, e25_C :UsrInt; puit2nbrFired: UsrInt );

let
puit2nbrFired= if puit2DoFire(e23, e24, e25,UsrInt_3) then UsrInt_3
		else if puit2DoFire(e23, e24, e25,UsrInt_2) then UsrInt_2
		else if puit2DoFire(e23, e24, e25,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e23_C, e24_C, e25_C,) = (UsrIntMult(puit2nbrFired, puit2_e23_rate_in),UsrIntMult(puit2nbrFired, puit2_e24_rate_in),UsrIntMult(puit2nbrFired, puit2_e25_rate_in));

tel;
------------------
node puit2DoFire(e23, e24, e25,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e23, UsrIntMult(times, puit2_e23_rate_in)) 
	and UsrIntGte(e24, UsrIntMult(times, puit2_e24_rate_in)) 
	and UsrIntGte(e25, UsrIntMult(times, puit2_e25_rate_in)) 
	then true 
	else false;

tel;
------------------
node puit3(e26, e27 :UsrInt) returns (e26_C, e27_C :UsrInt; puit3nbrFired: UsrInt );

let
puit3nbrFired= if puit3DoFire(e26, e27,UsrInt_3) then UsrInt_3
		else if puit3DoFire(e26, e27,UsrInt_2) then UsrInt_2
		else if puit3DoFire(e26, e27,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e26_C, e27_C,) = (UsrIntMult(puit3nbrFired, puit3_e26_rate_in),UsrIntMult(puit3nbrFired, puit3_e27_rate_in));

tel;
------------------
node puit3DoFire(e26, e27,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e26, UsrIntMult(times, puit3_e26_rate_in)) 
	and UsrIntGte(e27, UsrIntMult(times, puit3_e27_rate_in)) 
	then true 
	else false;

tel;
------------------
node puit4(e28, e29 :UsrInt) returns (e28_C, e29_C :UsrInt; puit4nbrFired: UsrInt );

let
puit4nbrFired= if puit4DoFire(e28, e29,UsrInt_3) then UsrInt_3
		else if puit4DoFire(e28, e29,UsrInt_2) then UsrInt_2
		else if puit4DoFire(e28, e29,UsrInt_1) then UsrInt_1
		else UsrInt_0;

(e28_C, e29_C,) = (UsrIntMult(puit4nbrFired, puit4_e28_rate_in),UsrIntMult(puit4nbrFired, puit4_e29_rate_in));

tel;
------------------
node puit4DoFire(e28, e29,times:UsrInt) returns ( yes: bool);
let

yes = if UsrIntGte(e28, UsrIntMult(times, puit4_e28_rate_in)) 
	and UsrIntGte(e29, UsrIntMult(times, puit4_e29_rate_in)) 
	then true 
	else false;

tel;
------------------

--**************** Node Top Declaration ****************--

node top (xx: UsrInt) returns (e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e13, e14, e15, e16, e18, e19, e20, e17, e21, e22, e23, e24, e25, e26, e27, e28, e29, P1nbrFired, W1nbrFired, P2nbrFired, W2nbrFired, T1nbrFired, T2nbrFired, R1nbrFired, R2nbrFired, CnbrFired, C2nbrFired, puit1nbrFired, puit2nbrFired, puit3nbrFired, puit4nbrFired:UsrInt);

-------------- Les variables -------------- 

var

e1_C, e1_P: UsrInt; 
e2_C, e2_P: UsrInt; 
e3_C, e3_P: UsrInt; 
e4_C, e4_P: UsrInt; 
e5_C, e5_P: UsrInt; 
e6_C, e6_P: UsrInt; 
e7_C, e7_P: UsrInt; 
e8_C, e8_P: UsrInt; 
e9_C, e9_P: UsrInt; 
e10_C, e10_P: UsrInt; 
e11_C, e11_P: UsrInt; 
e13_C, e13_P: UsrInt; 
e14_C, e14_P: UsrInt; 
e15_C, e15_P: UsrInt; 
e16_C, e16_P: UsrInt; 
e18_C, e18_P: UsrInt; 
e19_C, e19_P: UsrInt; 
e20_C, e20_P: UsrInt; 
e17_C, e17_P: UsrInt; 
e21_C, e21_P: UsrInt; 
e22_C, e22_P: UsrInt; 
e23_C, e23_P: UsrInt; 
e24_C, e24_P: UsrInt; 
e25_C, e25_P: UsrInt; 
e26_C, e26_P: UsrInt; 
e27_C, e27_P: UsrInt; 
e28_C, e28_P: UsrInt; 
e29_C, e29_P: UsrInt; 

let

e1 = e1_I -> pre UsrIntPlus( UsrIntMinus( e1,e1_C), e1_P);
e2 = e2_I -> pre UsrIntPlus( UsrIntMinus( e2,e2_C), e2_P);
e3 = e3_I -> pre UsrIntPlus( UsrIntMinus( e3,e3_C), e3_P);
e4 = e4_I -> pre UsrIntPlus( UsrIntMinus( e4,e4_C), e4_P);
e5 = e5_I -> pre UsrIntPlus( UsrIntMinus( e5,e5_C), e5_P);
e6 = e6_I -> pre UsrIntPlus( UsrIntMinus( e6,e6_C), e6_P);
e7 = e7_I -> pre UsrIntPlus( UsrIntMinus( e7,e7_C), e7_P);
e8 = e8_I -> pre UsrIntPlus( UsrIntMinus( e8,e8_C), e8_P);
e9 = e9_I -> pre UsrIntPlus( UsrIntMinus( e9,e9_C), e9_P);
e10 = e10_I -> pre UsrIntPlus( UsrIntMinus( e10,e10_C), e10_P);
e11 = e11_I -> pre UsrIntPlus( UsrIntMinus( e11,e11_C), e11_P);
e13 = e13_I -> pre UsrIntPlus( UsrIntMinus( e13,e13_C), e13_P);
e14 = e14_I -> pre UsrIntPlus( UsrIntMinus( e14,e14_C), e14_P);
e15 = e15_I -> pre UsrIntPlus( UsrIntMinus( e15,e15_C), e15_P);
e16 = e16_I -> pre UsrIntPlus( UsrIntMinus( e16,e16_C), e16_P);
e18 = e18_I -> pre UsrIntPlus( UsrIntMinus( e18,e18_C), e18_P);
e19 = e19_I -> pre UsrIntPlus( UsrIntMinus( e19,e19_C), e19_P);
e20 = e20_I -> pre UsrIntPlus( UsrIntMinus( e20,e20_C), e20_P);
e17 = e17_I -> pre UsrIntPlus( UsrIntMinus( e17,e17_C), e17_P);
e21 = e21_I -> pre UsrIntPlus( UsrIntMinus( e21,e21_C), e21_P);
e22 = e22_I -> pre UsrIntPlus( UsrIntMinus( e22,e22_C), e22_P);
e23 = e23_I -> pre UsrIntPlus( UsrIntMinus( e23,e23_C), e23_P);
e24 = e24_I -> pre UsrIntPlus( UsrIntMinus( e24,e24_C), e24_P);
e25 = e25_I -> pre UsrIntPlus( UsrIntMinus( e25,e25_C), e25_P);
e26 = e26_I -> pre UsrIntPlus( UsrIntMinus( e26,e26_C), e26_P);
e27 = e27_I -> pre UsrIntPlus( UsrIntMinus( e27,e27_C), e27_P);
e28 = e28_I -> pre UsrIntPlus( UsrIntMinus( e28,e28_C), e28_P);
e29 = e29_I -> pre UsrIntPlus( UsrIntMinus( e29,e29_C), e29_P);



(e1_C, e2_P, e21_P, P1nbrFired) = P1(e1);
(e2_C, e5_C, e3_P, e6_P, e26_P, W1nbrFired) = W1(e2, e5);
(e3_C, e4_P, P2nbrFired) = P2(e3);
(e4_C, e7_C, e1_P, e8_P, W2nbrFired) = W2(e4, e7);
(e6_C, e9_C, e15_C, e5_P, e10_P, e11_P, T1nbrFired) = T1(e6, e9, e15);
(e8_C, e10_C, e14_C, e7_P, e9_P, e13_P, T2nbrFired) = T2(e8, e10, e14);
(e11_C, e17_C, e14_P, e23_P, e27_P, e28_P, R1nbrFired) = R1(e11, e17);
(e13_C, e15_P, e16_P, e24_P, e29_P, R2nbrFired) = R2(e13);
(e16_C, e18_C, e20_C, e18_P, e19_P, e25_P, CnbrFired) = C(e16, e18, e20);
(e19_C, e20_P, e17_P, e22_P, C2nbrFired) = C2(e19);
(e21_C, e22_C, puit1nbrFired) = puit1(e21, e22);
(e23_C, e24_C, e25_C, puit2nbrFired) = puit2(e23, e24, e25);
(e26_C, e27_C, puit3nbrFired) = puit3(e26, e27);
(e28_C, e29_C, puit4nbrFired) = puit4(e28, e29);


tel;


--**************** Node Harness Declaration ****************--

node Harness (xx: UsrInt) returns (noError :bool)

var

e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e13, e14, e15, e16, e18, e19, e20, e17, e21, e22, e23, e24, e25, e26, e27, e28, e29, P1nbrFired, W1nbrFired, P2nbrFired, W2nbrFired, T1nbrFired, T2nbrFired, R1nbrFired, R2nbrFired, CnbrFired, C2nbrFired, puit1nbrFired, puit2nbrFired, puit3nbrFired, puit4nbrFired:UsrInt;

positiveValues, v1, v2, v3, v4, v5: bool;

let

(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e13, e14, e15, e16, e18, e19, e20, e17, e21, e22, e23, e24, e25, e26, e27, e28, e29, P1nbrFired, W1nbrFired, P2nbrFired, W2nbrFired, T1nbrFired, T2nbrFired, R1nbrFired, R2nbrFired, CnbrFired, C2nbrFired, puit1nbrFired, puit2nbrFired, puit3nbrFired, puit4nbrFired) = top(xx);

positiveValues = UsrIntGte( e1, UsrInt_0) 
	and UsrIntGte( e2, UsrInt_0) 
	and UsrIntGte( e3, UsrInt_0) 
	and UsrIntGte( e4, UsrInt_0) 
	and UsrIntGte( e5, UsrInt_0) 
	and UsrIntGte( e6, UsrInt_0) 
	and UsrIntGte( e7, UsrInt_0) 
	and UsrIntGte( e8, UsrInt_0) 
	and UsrIntGte( e9, UsrInt_0) 
	and UsrIntGte( e10, UsrInt_0) 
	and UsrIntGte( e11, UsrInt_0) 
	and UsrIntGte( e13, UsrInt_0) 
	and UsrIntGte( e14, UsrInt_0) 
	and UsrIntGte( e15, UsrInt_0) 
	and UsrIntGte( e16, UsrInt_0) 
	and UsrIntGte( e18, UsrInt_0) 
	and UsrIntGte( e19, UsrInt_0) 
	and UsrIntGte( e20, UsrInt_0) 
	and UsrIntGte( e17, UsrInt_0) 
	and UsrIntGte( e21, UsrInt_0) 
	and UsrIntGte( e22, UsrInt_0) 
	and UsrIntGte( e23, UsrInt_0) 
	and UsrIntGte( e24, UsrInt_0) 
	and UsrIntGte( e25, UsrInt_0) 
	and UsrIntGte( e26, UsrInt_0) 
	and UsrIntGte( e27, UsrInt_0) 
	and UsrIntGte( e28, UsrInt_0) 
	and UsrIntGte( e29, UsrInt_0) 
	and UsrIntGte( P1nbrFired , UsrInt_0) 
	and UsrIntGte( W1nbrFired , UsrInt_0) 
	and UsrIntGte( P2nbrFired , UsrInt_0) 
	and UsrIntGte( W2nbrFired , UsrInt_0) 
	and UsrIntGte( T1nbrFired , UsrInt_0) 
	and UsrIntGte( T2nbrFired , UsrInt_0) 
	and UsrIntGte( R1nbrFired , UsrInt_0) 
	and UsrIntGte( R2nbrFired , UsrInt_0) 
	and UsrIntGte( CnbrFired , UsrInt_0) 
	and UsrIntGte( C2nbrFired , UsrInt_0) 
	and UsrIntGte( puit1nbrFired , UsrInt_0) 
	and UsrIntGte( puit2nbrFired , UsrInt_0) 
	and UsrIntGte( puit3nbrFired , UsrInt_0) 
	and UsrIntGte( puit4nbrFired , UsrInt_0) ;

--ok: possible to have up to (n+1) W1 performed for  n R1 
v1= UsrIntLte(e26,  UsrInt_2) and UsrIntLte(e27,  UsrInt_1) and UsrIntLte( e27,  e26);
--ok:  R2 fires after  R1 and between two R1 there is one and only one  R2 
v2=  (UsrIntEq( e28, e29) or  UsrIntEq(e28, UsrIntPlus (e29, UsrInt_1))) and ( (UsrIntEq( pre e29, UsrInt_0) and UsrIntEq( e29, UsrInt_1))=>UsrIntEq( pre e28, UsrInt_1) ) ;

--(duree min entre la fin de R2 and la  fin de R1 )
--ok: le premier v3  doit être  vrai le deuxième contenat un pre de plus doit être faux
v3= true ->(UsrIntEq( pre   e29 , UsrInt_0)  and UsrIntEq( e29 , UsrInt_1)) => UsrIntEq (pre pre  pre pre pre   e28 , UsrInt_1);
--  v3= true ->(UsrIntEq( pre   e29 , UsrInt_0)  and UsrIntEq( e29 , UsrInt_1))=>UsrIntEq (pre pre  pre pre pre  pre   e28 , UsrInt_1);

--(duree max entre la fin de R2 and la fin de R1)
--ok: le premier v4  doit être  vrai le deuxième contenant un pre de moins doit être faux
v4= true ->(UsrIntEq( pre   e29 , UsrInt_0)  and UsrIntEq( e29 , UsrInt_1)) => UsrIntEq(   pre pre pre  pre pre pre pre pre pre  e28 , UsrInt_0);
--v4= true ->(UsrIntEq( pre   e29 , UsrInt_0)  and UsrIntEq( e29 , UsrInt_1)) => UsrIntEq(   pre pre pre  pre pre pre pre pre  e28 , UsrInt_0);
 

--le producteur P1 peut etre en  avance au maximum de trois occurances par rapport au consomateur C
v5= UsrIntLte( UsrIntMinus ( e21, e22) , UsrInt_3);--true for x
--v5= UsrIntLte( UsrIntMinus ( e21, e22) , UsrInt_2);--false  for x-1

noError=  v5;

tel
