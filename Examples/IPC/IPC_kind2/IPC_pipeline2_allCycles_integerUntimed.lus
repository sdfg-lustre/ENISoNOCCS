--** This lustre code is generated automatically on 04 juin 2020 06:50:17 PM
--**It corresponds to a translation to Lustre of the Untimed SDFG model  of the design "IPC" 




--**************** Const Rates ****************--

const P1_e1_rate_in = 1 ;
const P1_e2_rate_out = 1 ;
const P1_e21_rate_out = 1 ;
const W1_e2_rate_in = 1 ;
const W1_e5_rate_in = 1 ;
const W1_e3_rate_out = 1 ;
const W1_e6_rate_out = 1 ;
const P2_e3_rate_in = 1 ;
const P2_e4_rate_out = 1 ;
const W2_e4_rate_in = 1 ;
const W2_e7_rate_in = 1 ;
const W2_e1_rate_out = 1 ;
const W2_e8_rate_out = 1 ;
const T1_e6_rate_in = 1 ;
const T1_e9_rate_in = 1 ;
const T1_e15_rate_in = 1 ;
const T1_e5_rate_out = 1 ;
const T1_e10_rate_out = 1 ;
const T1_e11_rate_out = 1 ;
const T2_e8_rate_in = 1 ;
const T2_e10_rate_in = 1 ;
const T2_e14_rate_in = 1 ;
const T2_e7_rate_out = 1 ;
const T2_e9_rate_out = 1 ;
const T2_e13_rate_out = 1 ;
const R1_e11_rate_in = 1 ;
const R1_e17_rate_in = 1 ;
const R1_e14_rate_out = 1 ;
const R1_e28_rate_out = 1 ;
const R2_e13_rate_in = 1 ;
const R2_e15_rate_out = 1 ;
const R2_e16_rate_out = 1 ;
const R2_e29_rate_out = 1 ;
const C_e16_rate_in = 1 ;
const C_e18_in_rate_in = 1 ;
const C_e20_rate_in = 1 ;
const C_e18_out_rate_out = 1 ;
const C_e19_rate_out = 1 ;
const C2_e19_rate_in = 1 ;
const C2_e20_rate_out = 1 ;
const C2_e17_rate_out = 1 ;
const C2_e22_rate_out = 1 ;
const puit1_e21_rate_in = 1 ;
const puit1_e22_rate_in = 1 ;
const puit4_e28_rate_in = 1 ;
const puit4_e29_rate_in = 1 ;

--**************** Init Channel ****************--

const e1_I = 1 ;
const e2_I = 0 ;
const e3_I = 0 ;
const e4_I = 0 ;
const e5_I = 1 ;
const e6_I = 0 ;
const e7_I = 1 ;
const e8_I = 0 ;
const e9_I = 1 ;
const e10_I = 0 ;
const e11_I = 0 ;
const e13_I = 0 ;
const e14_I = 0 ;
const e15_I = 1 ;
const e16_I = 0 ;
const e18_I = 1 ;
const e19_I = 0 ;
const e20_I = 3 ;
const e17_I = 1 ;
const e21_I = 0 ;
const e22_I = 0 ;
const e28_I = 0 ;
const e29_I = 0 ;


--**************** Nodes Declaration ****************--

node P1(e1 :int) returns (e1_C, e2_P, e21_P :int; P1nbrFired: int );

let
P1nbrFired= if P1DoFire(e1,1) then 1
		else 0;

(e1_C,e2_P, e21_P) = ((P1nbrFired * P1_e1_rate_in), (P1nbrFired * P1_e2_rate_out), (P1nbrFired * P1_e21_rate_out));

tel;
------------------
node P1DoFire(e1 :int; times: int) returns ( yes: bool);
let

yes = if  (e1>=  (times * P1_e1_rate_in)) 
	then true 
	else false;

tel;
------------------
node W1(e2, e5 :int) returns (e2_C, e5_C, e3_P, e6_P :int; W1nbrFired: int );

let
W1nbrFired= if W1DoFire(e2, e5,1) then 1
		else 0;

(e2_C, e5_C,e3_P, e6_P) = ((W1nbrFired * W1_e2_rate_in), (W1nbrFired * W1_e5_rate_in), (W1nbrFired * W1_e3_rate_out), (W1nbrFired * W1_e6_rate_out));

tel;
------------------
node W1DoFire(e2, e5 :int; times: int) returns ( yes: bool);
let

yes = if  (e2>=  (times * W1_e2_rate_in)) 
	and  (e5>=  (times * W1_e5_rate_in)) 
	then true 
	else false;

tel;
------------------
node P2(e3 :int) returns (e3_C, e4_P :int; P2nbrFired: int );

let
P2nbrFired= if P2DoFire(e3,1) then 1
		else 0;

(e3_C,e4_P) = ((P2nbrFired * P2_e3_rate_in), (P2nbrFired * P2_e4_rate_out));

tel;
------------------
node P2DoFire(e3 :int; times: int) returns ( yes: bool);
let

yes = if  (e3>=  (times * P2_e3_rate_in)) 
	then true 
	else false;

tel;
------------------
node W2(e4, e7 :int) returns (e4_C, e7_C, e1_P, e8_P :int; W2nbrFired: int );

let
W2nbrFired= if W2DoFire(e4, e7,1) then 1
		else 0;

(e4_C, e7_C,e1_P, e8_P) = ((W2nbrFired * W2_e4_rate_in), (W2nbrFired * W2_e7_rate_in), (W2nbrFired * W2_e1_rate_out), (W2nbrFired * W2_e8_rate_out));

tel;
------------------
node W2DoFire(e4, e7 :int; times: int) returns ( yes: bool);
let

yes = if  (e4>=  (times * W2_e4_rate_in)) 
	and  (e7>=  (times * W2_e7_rate_in)) 
	then true 
	else false;

tel;
------------------
node T1(e6, e9, e15 :int) returns (e6_C, e9_C, e15_C, e5_P, e10_P, e11_P :int; T1nbrFired: int );

let
T1nbrFired= if T1DoFire(e6, e9, e15,1) then 1
		else 0;

(e6_C, e9_C, e15_C,e5_P, e10_P, e11_P) = ((T1nbrFired * T1_e6_rate_in), (T1nbrFired * T1_e9_rate_in), (T1nbrFired * T1_e15_rate_in), (T1nbrFired * T1_e5_rate_out), (T1nbrFired * T1_e10_rate_out), (T1nbrFired * T1_e11_rate_out));

tel;
------------------
node T1DoFire(e6, e9, e15 :int; times: int) returns ( yes: bool);
let

yes = if  (e6>=  (times * T1_e6_rate_in)) 
	and  (e9>=  (times * T1_e9_rate_in)) 
	and  (e15>=  (times * T1_e15_rate_in)) 
	then true 
	else false;

tel;
------------------
node T2(e8, e10, e14 :int) returns (e8_C, e10_C, e14_C, e7_P, e9_P, e13_P :int; T2nbrFired: int );

let
T2nbrFired= if T2DoFire(e8, e10, e14,1) then 1
		else 0;

(e8_C, e10_C, e14_C,e7_P, e9_P, e13_P) = ((T2nbrFired * T2_e8_rate_in), (T2nbrFired * T2_e10_rate_in), (T2nbrFired * T2_e14_rate_in), (T2nbrFired * T2_e7_rate_out), (T2nbrFired * T2_e9_rate_out), (T2nbrFired * T2_e13_rate_out));

tel;
------------------
node T2DoFire(e8, e10, e14 :int; times: int) returns ( yes: bool);
let

yes = if  (e8>=  (times * T2_e8_rate_in)) 
	and  (e10>=  (times * T2_e10_rate_in)) 
	and  (e14>=  (times * T2_e14_rate_in)) 
	then true 
	else false;

tel;
------------------
node R1(e11, e17 :int) returns (e11_C, e17_C, e14_P, e28_P :int; R1nbrFired: int );

let
R1nbrFired= if R1DoFire(e11, e17,1) then 1
		else 0;

(e11_C, e17_C,e14_P, e28_P) = ((R1nbrFired * R1_e11_rate_in), (R1nbrFired * R1_e17_rate_in), (R1nbrFired * R1_e14_rate_out), (R1nbrFired * R1_e28_rate_out));

tel;
------------------
node R1DoFire(e11, e17 :int; times: int) returns ( yes: bool);
let

yes = if  (e11>=  (times * R1_e11_rate_in)) 
	and  (e17>=  (times * R1_e17_rate_in)) 
	then true 
	else false;

tel;
------------------
node R2(e13 :int) returns (e13_C, e15_P, e16_P, e29_P :int; R2nbrFired: int );

let
R2nbrFired= if R2DoFire(e13,1) then 1
		else 0;

(e13_C,e15_P, e16_P, e29_P) = ((R2nbrFired * R2_e13_rate_in), (R2nbrFired * R2_e15_rate_out), (R2nbrFired * R2_e16_rate_out), (R2nbrFired * R2_e29_rate_out));

tel;
------------------
node R2DoFire(e13 :int; times: int) returns ( yes: bool);
let

yes = if  (e13>=  (times * R2_e13_rate_in)) 
	then true 
	else false;

tel;
------------------
node C(e16, e18_in, e20 :int) returns (e16_C, e18_in_C, e20_C, e18_out_P, e19_P :int; CnbrFired: int );

let
CnbrFired= if CDoFire(e16, e18_in, e20,1) then 1
		else 0;

(e16_C, e18_in_C, e20_C,e18_out_P, e19_P) = ((CnbrFired * C_e16_rate_in), (CnbrFired * C_e18_in_rate_in), (CnbrFired * C_e20_rate_in), (CnbrFired * C_e18_out_rate_out), (CnbrFired * C_e19_rate_out));

tel;
------------------
node CDoFire(e16, e18_in, e20 :int; times: int) returns ( yes: bool);
let

yes = if  (e16>=  (times * C_e16_rate_in)) 
	and  (e18_in>=  (times * C_e18_in_rate_in)) 
	and  (e20>=  (times * C_e20_rate_in)) 
	then true 
	else false;

tel;
------------------
node C2(e19 :int) returns (e19_C, e20_P, e17_P, e22_P :int; C2nbrFired: int );

let
C2nbrFired= if C2DoFire(e19,3) then 3
		else if C2DoFire(e19,2) then 2
		else if C2DoFire(e19,1) then 1
		else 0;

(e19_C,e20_P, e17_P, e22_P) = ((C2nbrFired * C2_e19_rate_in), (C2nbrFired * C2_e20_rate_out), (C2nbrFired * C2_e17_rate_out), (C2nbrFired * C2_e22_rate_out));

tel;
------------------
node C2DoFire(e19 :int; times: int) returns ( yes: bool);
let

yes = if  (e19>=  (times * C2_e19_rate_in)) 
	then true 
	else false;

tel;
------------------
node puit1(e21, e22 :int) returns (e21_C, e22_C :int; puit1nbrFired: int );

let
puit1nbrFired= if puit1DoFire(e21, e22,1) then 1
		else 0;

(e21_C, e22_C) = ((puit1nbrFired * puit1_e21_rate_in), (puit1nbrFired * puit1_e22_rate_in));

tel;
------------------
node puit1DoFire(e21, e22 :int; times: int) returns ( yes: bool);
let

yes = if  (e21>=  (times * puit1_e21_rate_in)) 
	and  (e22>=  (times * puit1_e22_rate_in)) 
	then true 
	else false;

tel;
------------------
node puit4(e28, e29 :int) returns (e28_C, e29_C :int; puit4nbrFired: int );

let
puit4nbrFired= if puit4DoFire(e28, e29,1) then 1
		else 0;

(e28_C, e29_C) = ((puit4nbrFired * puit4_e28_rate_in), (puit4nbrFired * puit4_e29_rate_in));

tel;
------------------
node puit4DoFire(e28, e29 :int; times: int) returns ( yes: bool);
let

yes = if  (e28>=  (times * puit4_e28_rate_in)) 
	and  (e29>=  (times * puit4_e29_rate_in)) 
	then true 
	else false;

tel;
------------------

--**************** Node Top Declaration ****************--

node top (_: bool) returns (e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e13, e14, e15, e16, e18, e19, e20, e17, e21, e22, e28, e29, P1nbrFired, W1nbrFired, P2nbrFired, W2nbrFired, T1nbrFired, T2nbrFired, R1nbrFired, R2nbrFired, CnbrFired, C2nbrFired, puit1nbrFired, puit4nbrFired: int);

var

e1_C, e1_P: int; 
e2_C, e2_P: int; 
e3_C, e3_P: int; 
e4_C, e4_P: int; 
e5_C, e5_P: int; 
e6_C, e6_P: int; 
e7_C, e7_P: int; 
e8_C, e8_P: int; 
e9_C, e9_P: int; 
e10_C, e10_P: int; 
e11_C, e11_P: int; 
e13_C, e13_P: int; 
e14_C, e14_P: int; 
e15_C, e15_P: int; 
e16_C, e16_P: int; 
e18_C, e18_P: int; 
e19_C, e19_P: int; 
e20_C, e20_P: int; 
e17_C, e17_P: int; 
e21_C, e21_P: int; 
e22_C, e22_P: int; 
e28_C, e28_P: int; 
e29_C, e29_P: int; 
noDeadlock, P1, P2, P3, P4,  P2_bis, P3_bis, P4_bis : bool;

let

e1 = e1_I -> pre  (  ( e1-e1_C)+ e1_P);
e2 = e2_I -> pre  (  ( e2-e2_C)+ e2_P);
e3 = e3_I -> pre  (  ( e3-e3_C)+ e3_P);
e4 = e4_I -> pre  (  ( e4-e4_C)+ e4_P);
e5 = e5_I -> pre  (  ( e5-e5_C)+ e5_P);
e6 = e6_I -> pre  (  ( e6-e6_C)+ e6_P);
e7 = e7_I -> pre  (  ( e7-e7_C)+ e7_P);
e8 = e8_I -> pre  (  ( e8-e8_C)+ e8_P);
e9 = e9_I -> pre  (  ( e9-e9_C)+ e9_P);
e10 = e10_I -> pre  (  ( e10-e10_C)+ e10_P);
e11 = e11_I -> pre  (  ( e11-e11_C)+ e11_P);
e13 = e13_I -> pre  (  ( e13-e13_C)+ e13_P);
e14 = e14_I -> pre  (  ( e14-e14_C)+ e14_P);
e15 = e15_I -> pre  (  ( e15-e15_C)+ e15_P);
e16 = e16_I -> pre  (  ( e16-e16_C)+ e16_P);
e18 = e18_I -> pre  (  ( e18-e18_C)+ e18_P);
e19 = e19_I -> pre  (  ( e19-e19_C)+ e19_P);
e20 = e20_I -> pre  (  ( e20-e20_C)+ e20_P);
e17 = e17_I -> pre  (  ( e17-e17_C)+ e17_P);
e21 = e21_I -> pre  (  ( e21-e21_C)+ e21_P);
e22 = e22_I -> pre  (  ( e22-e22_C)+ e22_P);
e28 = e28_I -> pre  (  ( e28-e28_C)+ e28_P);
e29 = e29_I -> pre  (  ( e29-e29_C)+ e29_P);



(e1_C, e2_P, e21_P, P1nbrFired) = P1(e1);
(e2_C, e5_C, e3_P, e6_P, W1nbrFired) = W1(e2, e5);
(e3_C, e4_P, P2nbrFired) = P2(e3);
(e4_C, e7_C, e1_P, e8_P, W2nbrFired) = W2(e4, e7);
(e6_C, e9_C, e15_C, e5_P, e10_P, e11_P, T1nbrFired) = T1(e6, e9, e15);
(e8_C, e10_C, e14_C, e7_P, e9_P, e13_P, T2nbrFired) = T2(e8, e10, e14);
(e11_C, e17_C, e14_P, e28_P, R1nbrFired) = R1(e11, e17);
(e13_C, e15_P, e16_P, e29_P, R2nbrFired) = R2(e13);
(e16_C, e18_C, e20_C, e18_P, e19_P, CnbrFired) = C(e16, e18, e20);
(e19_C, e20_P, e17_P, e22_P, C2nbrFired) = C2(e19);
(e21_C, e22_C, puit1nbrFired) = puit1(e21, e22);
(e28_C, e29_C, puit4nbrFired) = puit4(e28, e29);


noDeadlock = ( P1nbrFired >= 1) 
	or  ( W1nbrFired >= 1) 
	or  ( P2nbrFired >= 1) 
	or  ( W2nbrFired >= 1) 
	or  ( T1nbrFired >= 1) 
	or  ( T2nbrFired >= 1) 
	or  ( R1nbrFired >= 1) 
	or  ( R2nbrFired >= 1) 
	or  ( CnbrFired >= 1) 
	or  ( C2nbrFired >= 1) 
	or  ( puit1nbrFired >= 1) 
	or  ( puit4nbrFired >= 1);
 P1= ((e28=e29) or (e28=e29+1)) and (   (pre e29=0) and e29=1 => (pre e28 =1)   ); 

P2= (pre e29=0) and (e29=1) =>     (pre pre pre pre  pre        e28)=1;  -- m=5 
P2_bis= (pre e29=0) and (e29=1) => (pre pre pre pre  pre  pre   e28)=1; --m+1 pre 

P3= (pre e29=0) and (e29=1) =>     (pre pre pre pre pre pre pre pre pre  e28)=0; -- 
M+1=9 pre 
P3_bis= (pre e29=0) and (e29=1) => (pre pre pre pre pre pre pre pre      e28)=0; -- 
M pre 

P4= e21-e22<=3 ;--v=3; 
P4_bis=  e21-e22<= 2;

tel;


